version: '3.7'
services:
  # db server
  chat-mysql-prod:
    container_name: chat-mysql-prod
    build: ./mysql/
    volumes:
      - ./mysql/data:/var/lib/mysql # データの永続化
      - ./mysql/sqls:/docker-entrypoint-initdb.d # 初期化時に実行するSQL
    environment:
      - MYSQL_ROOT_PASSWORD=Mitsuya90
      - DB_PASSWORD=Mitsuya90
      - DB_DATABASE=chat
      - DB_TEST_PASSWORD=Mitsuya90
      - DB_TEST_DATABASE=test_chat
      - TZ=Asis/Tokyo

  # API esrver
  chat-api-prod:
    container_name: chat-api-prod
    volumes:
      - ./app:/app/
    ports:
      - 3031:3031
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    env_file:
      - ./.env
    environment:
      TZ: "Asia/Tokyo"
      ENV: GoogleMapAPIKEY
      ENV: YOUR_CHANNEL_ACCESS_TOKEN
      ENV: YOUR_CHANNEL_SECRET
    links:
      - chat-mysql-prod
    stdin_open: true
    tty: true

  chat-nginx-prod:
    container_name: chat-nginx-prod
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    links:
      - chat-api-prod
    ports:
      - "4231:4231"
    environment:
      TZ: "Asia/Tokyo"
    stdin_open: true
    tty: true

  chat-ssl-prod:
    container_name: chat-ssl-prod
    image: steveltn/https-portal:1
    ports:
      - '80:80'
      - '443:443'
    links:
      - chat-nginx-prod
    restart: always
    environment:
      DOMAINS: 'www.restaurant-concierge.net -> http://chat-nginx-prod:4231'
      # DOMAINS: 'www.restaurant-concierge.net'
      STAGE: 'production' # Don't use production until staging works
      # FORCE_RENEW: 'true'
